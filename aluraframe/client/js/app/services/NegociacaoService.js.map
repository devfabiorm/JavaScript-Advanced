{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","console","log","get","then","objetos","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","arrays","reduce","arrayAchatado","array","concat","negociacao","getConnection","conexao","dao","adiciona","connection","listaTodos","listaAtual","obterNegociacoes","negociacoes","filter","some","isEquals","negociacaoExiste","apagaTodos","msg"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport { Negociacao } from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n    \r\n    constructor(){\r\n\r\n        this._http = new HttpService();\r\n    }\r\n    obterNegociacoesDaSemana() {\r\n        console.log(\"executei semana\");\r\n            return this._http.get(\"negociacoes/semana\")\r\n            .then(objetos => {\r\n                return objetos.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {console.log(erro);\r\n            throw new Error(\"Não foi possível obter as negociações da semana.\")\r\n            });\r\n\r\n            \r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        console.log(\"executei semana passada\");\r\n        return this._http.get(\"negociacoes/anterior\")\r\n        .then(objetos => {\r\n            return objetos.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n        })\r\n        .catch(erro => {console.log(erro);\r\n        throw new Error(\"Não foi possível obter as negociações da semana anterior.\")\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        console.log(\"executei semana retrasada\");\r\n        return this._http.get(\"negociacoes/retrasada\")\r\n        .then(objetos => {\r\n            return objetos.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n        })\r\n        .catch(erro => {console.log(erro);\r\n        throw new Error(\"Não foi possível obter as negociações da semana retrasada.\")\r\n        });\r\n    }\r\n\r\n    obterNegociacoes(){\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n            ])\r\n            .then(arrays => {\r\n\r\n                return arrays.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n            })\r\n            .catch(erro => { throw new Error(erro)\r\n        });\r\n\r\n    }\r\n\r\n    cadastra(negociacao){\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação cadastrada com sucesso')\r\n            .catch(() => {\r\n                throw new Error('Erro ao cadastrar negociacao')\r\n            });\r\n    }\r\n\r\n    lista(){\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Erro ao obter as negociações do IndexDB');\r\n            })\r\n    }\r\n\r\n    importa(listaAtual){\r\n\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => negociacoes.filter(negociacao =>\r\n                !listaAtual.some(negociacaoExiste => \r\n                    negociacao.isEquals(negociacaoExiste))))\r\n            .catch(erro => {\r\n                throw new Error(erro);\r\n            })\r\n    }\r\n\r\n    apaga(){\r\n\r\n        return ConnectionFactory.getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(msg => msg)\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Erro ao apagar negociações')\r\n            });\r\n    }\r\n}"]}