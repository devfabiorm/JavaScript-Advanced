{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","itemAtual","result","dado","value","push","Date","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,kC,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;iDAEKC,a;AAET,uDAAYC,UAAZ,EAAuB;AAAA;;AAEnB,6CAAKC,WAAL,GAAmBD,UAAnB;AACA,6CAAKE,MAAL,GAAc,aAAd;AACH;;;;iEAEQC,U,EAAW;AAAA;;AAElB,uDAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,4DAAIC,UAAU,MAAKN,WAAL,CACGO,WADH,CACe,CAAC,MAAKN,MAAN,CADf,EAC8B,WAD9B,EAEGO,WAFH,CAEe,MAAKP,MAFpB,EAGGQ,GAHH,CAGOP,UAHP,CAAd;;AAKAI,gEAAQI,SAAR,GAAoB,aAAK;;AAErBN,wEAAQ,qCAAR;AACH,yDAHD;;AAKAE,gEAAQK,OAAR,GAAkB,aAAK;;AAEnBC,wEAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uEAAO,2BAAP;AACH,yDAJD;AAKD,iDAjBM,CAAP;AAkBD;;;qEAEW;AAAA;;AAEV,uDAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,4DAAIY,SAAS,OAAKjB,WAAL,CACEO,WADF,CACc,CAAC,OAAKN,MAAN,CADd,EAC6B,WAD7B,EAEEO,WAFF,CAEc,OAAKP,MAFnB,EAGEiB,UAHF,EAAb;;AAKA,4DAAIC,cAAc,EAAlB;;AAEAF,+DAAOP,SAAP,GAAmB,aAAK;;AAEtB,oEAAIU,YAAYN,EAAEC,MAAF,CAASM,MAAzB;;AAEA,oEAAGD,SAAH,EAAa;;AAEX,4EAAIE,OAAOF,UAAUG,KAArB;AACAJ,oFAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAe,IAAI4B,IAAJ,CAASH,KAAKI,KAAd,CAAf,EAAqCJ,KAAKK,WAA1C,EAAuDL,KAAKM,MAA5D,CAAjB;AACAR,kFAAUS,QAAV;AAED,iEAND,MAMK;;AAEHzB,gFAAQe,WAAR;AACD;AACF,yDAdD;;AAgBAF,+DAAON,OAAP,GAAiB,aAAK;;AAEpBC,wEAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uEAAO,wCAAP;AACD,yDAJD;AAMD,iDA/BM,CAAP;AAgCD;;;qEAEW;AAAA;;AAEV,uDAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,4DAAIC,UAAU,OAAKN,WAAL,CACCO,WADD,CACa,CAAC,OAAKN,MAAN,CADb,EAC4B,WAD5B,EAECO,WAFD,CAEa,OAAKP,MAFlB,EAGC6B,KAHD,EAAd;;AAKAxB,gEAAQI,SAAR,GAAoB;AAAA,uEAAKN,QAAQ,mCAAR,CAAL;AAAA,yDAApB;;AAEAE,gEAAQK,OAAR,GAAkB,aAAK;AACrBN,uEAAOS,EAAEC,MAAF,CAASC,KAAhB;AACD,yDAFD;AAID,iDAbM,CAAP;AAcD","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoDao{\r\n\r\n    constructor(connection){\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        let request = this._connection\r\n                        .transaction([this._store], 'readwrite')\r\n                        .objectStore(this._store)\r\n                        .add(negociacao);\r\n                        \r\n        request.onsuccess = e => {\r\n\r\n            resolve('Negociacação cadastrada com sucesso');\r\n        }\r\n\r\n        request.onerror = e => {\r\n\r\n            console.log(e.target.error);\r\n            reject('Erro ao gravar negociacão');\r\n        }\r\n      });\r\n    }\r\n\r\n    listaTodos(){\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        let cursor = this._connection\r\n                      .transaction([this._store], 'readwrite')\r\n                      .objectStore(this._store)\r\n                      .openCursor();\r\n       \r\n        let negociacoes = [];\r\n\r\n        cursor.onsuccess = e => {\r\n\r\n          let itemAtual = e.target.result;\r\n\r\n          if(itemAtual){\r\n\r\n            let dado = itemAtual.value;\r\n            negociacoes.push(new Negociacao(new Date(dado._data), dado._quantidade, dado._valor));\r\n            itemAtual.continue();\r\n\r\n          }else{\r\n            \r\n            resolve(negociacoes);\r\n          }\r\n        };\r\n\r\n        cursor.onerror = e => {\r\n\r\n          console.log(e.target.error);\r\n          reject('Não foi possível listar as negociações');\r\n        };\r\n\r\n      });\r\n    }\r\n\r\n    apagaTodos(){\r\n\r\n      return new Promise((resolve, reject) => {\r\n\r\n        let request = this._connection\r\n                      .transaction([this._store], 'readwrite')\r\n                      .objectStore(this._store)\r\n                      .clear();\r\n\r\n        request.onsuccess = e => resolve('Negociações removidas com sucesso');\r\n\r\n        request.onerror = e => {\r\n          reject(e.target.error);\r\n        }\r\n\r\n      });\r\n    }\r\n}"]}